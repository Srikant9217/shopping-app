# Generated by Django 2.2.4 on 2020-05-21 11:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('image_url', models.ImageField(blank=True, null=True, upload_to='category/img')),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='products.Category')),
            ],
            options={
                'verbose_name_plural': 'categories',
                'unique_together': {('parent', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('image_url_1', models.ImageField(blank=True, null=True, upload_to='product/img')),
                ('image_url_2', models.ImageField(blank=True, null=True, upload_to='product/img')),
                ('image_url_3', models.ImageField(blank=True, null=True, upload_to='product/img')),
                ('offer_price', models.FloatField(default=0)),
                ('original_price', models.FloatField(default=0)),
                ('description', models.TextField(blank=True, null=True)),
                ('quantity_left', models.IntegerField(blank=True, null=True)),
                ('return_days', models.IntegerField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('category', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.Category')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dp', models.ImageField(blank=True, null=True, upload_to='profile/img')),
                ('country', models.CharField(blank=True, max_length=20, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('city', models.CharField(blank=True, max_length=20, null=True)),
                ('street_address', models.CharField(blank=True, max_length=50, null=True)),
                ('postcode', models.IntegerField(blank=True, null=True)),
                ('phone_number', models.IntegerField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10, null=True)),
                ('total_original', models.IntegerField(default=0)),
                ('total_offer', models.IntegerField(default=0)),
                ('total', models.IntegerField(default=0)),
                ('cart_products', models.ManyToManyField(blank=True, to='products.Product')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('wishlist_products', models.ManyToManyField(blank=True, related_name='wishlist', to='products.Product')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_date', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('rating', models.CharField(blank=True, max_length=5, null=True)),
                ('product', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='products.Product')),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordered_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('status', models.CharField(choices=[('Order Placed', 'Order Placed'), ('Order Confirmed', 'Order Confirmed'), ('Packing', 'Packing'), ('Shipped', 'Shipped'), ('Out for Delivery', 'Out for Delivery'), ('Delivered', 'Delivered'), ('Order Cancelled', 'Order Cancelled'), ('Return Request Placed', 'Return Request Placed'), ('Return Request Acknowledged', 'Return Request Acknowledged'), ('Courier Service Informed', 'Courier Service Informed'), ('Return Product Verified', 'Return Product Verified'), ('Refund Completed', 'Refund Completed')], default='Order Placed', max_length=200)),
                ('customer', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('ordered_product', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='admin', to='products.Product')),
            ],
        ),
    ]
